---
on:
  workflow_dispatch:
  push:
    tags:
    - '*'

jobs:
  build-linux:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            cc: gcc-11
            cxx: g++-11
            target: x86_64-unknown-linux-gnu
            archive_type: tar
            suffix: '.tar.gz'

    runs-on: ${{ matrix.os }}

    env:
      CC: ccache ${{ matrix.cc }}
      CXX: ccache ${{ matrix.cxx }}

    steps:
      - id: get_repository_name
        run: echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash
      - id: checkout
        uses: actions/checkout@v3
      - id: cache-ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ${{ matrix.cxx }} ${{matrix.cc }} \
            libfmt-dev libboost-dev \
            libgtest-dev \
            libpcre2-dev \
            libsystemd-dev libdbus-1-dev \
            libicu-dev \
            libcurl4-gnutls-dev \
            libpcre2-dev \
            libavahi-client-dev \
            libmad0-dev libmpg123-dev libid3tag0-dev \
            libflac-dev libvorbis-dev libopus-dev libogg-dev \
            libadplug-dev libaudiofile-dev libsndfile1-dev libfaad-dev \
            libfluidsynth-dev libgme-dev libmikmod-dev libmodplug-dev \
            libmpcdec-dev libwavpack-dev libwildmidi-dev \
            libsidplay2-dev libsidutils-dev libresid-builder-dev \
            libavcodec-dev libavformat-dev \
            libmp3lame-dev libtwolame-dev libshine-dev \
            libsamplerate0-dev libsoxr-dev \
            libbz2-dev libcdio-paranoia-dev libiso9660-dev libmms-dev \
            libzzip-dev \
            libyajl-dev libexpat-dev \
            libasound2-dev libao-dev libjack-jackd2-dev libopenal-dev \
            libpulse-dev libshout3-dev \
            libsndio-dev \
            libmpdclient-dev \
            libnfs-dev \
            libupnp-dev \
            libsqlite3-dev \
            libchromaprint-dev \
            libgcrypt20-dev


      - name: Full Build
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          directory: output/full
          setup-options: -Ddocumentation=disabled -Dtest=true -Dsystemd=enabled -Dpcre=enabled
          options: --verbose
          meson-version: 0.56.0
      - run: ls -l -a ./output/full
      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: '${{matrix.archive_type}}'
          filename: '${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}${{matrix.suffix}}'
          path: "./mpd"
          directory: "./output/full"
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "./output/full/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}${{matrix.suffix}}"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
      - uses: actions/upload-artifact@master
        with:
          name: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}
          path: ./output/full/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{matrix.target}}${{matrix.suffix}}